/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_matrix_free(a: number): void;
export function __wbg_get_matrix_m(a: number): number;
export function __wbg_set_matrix_m(a: number, b: number): void;
export function __wbg_get_matrix_n(a: number): number;
export function __wbg_set_matrix_n(a: number, b: number): void;
export function matrix_new(a: number, b: number): number;
export function matrix_from(a: number, b: number, c: number, d: number): number;
export function matrix_get(a: number, b: number, c: number): number;
export function matrix_set(a: number, b: number, c: number, d: number): void;
export function matrix_get_rows(a: number, b: number, c: number): number;
export function matrix_get_columns(a: number, b: number, c: number): number;
export function matrix_get_rows_columns(a: number, b: number, c: number, d: number, e: number): number;
export function matrix_swap_rows(a: number, b: number, c: number): void;
export function matrix_swap_columns(a: number, b: number, c: number): void;
export function matrix_add(a: number, b: number): number;
export function matrix_sub(a: number, b: number): number;
export function matrix_mul_vec(a: number, b: number): number;
export function matrix_mul_mat(a: number, b: number): number;
export function matrix_solve(a: number, b: number): number;
export function matrix_solve_mut(a: number, b: number): number;
export function matrix_to_string(a: number, b: number): void;
export function __wbg_vector_free(a: number): void;
export function __wbg_get_vector_n(a: number): number;
export function __wbg_set_vector_n(a: number, b: number): void;
export function vector_new(a: number): number;
export function vector_from(a: number, b: number): number;
export function vector_get(a: number, b: number): number;
export function vector_set(a: number, b: number, c: number): void;
export function vector_swap(a: number, b: number, c: number): void;
export function vector_dot(a: number, b: number): number;
export function vector_to_string(a: number, b: number): void;
export function __wbg_vec2_free(a: number): void;
export function __wbg_get_vec2_x(a: number): number;
export function __wbg_set_vec2_x(a: number, b: number): void;
export function __wbg_get_vec2_y(a: number): number;
export function __wbg_set_vec2_y(a: number, b: number): void;
export function vec2_new(a: number, b: number): number;
export function vec2_splat(a: number): number;
export function vec2_len_sq(a: number): number;
export function vec2_len(a: number): number;
export function vec2_angle_to(a: number, b: number): number;
export function vec2_angle(a: number): number;
export function vec2_rotate(a: number, b: number): number;
export function vec2_normalize(a: number): number;
export function vec2_lerp(a: number, b: number, c: number): number;
export function vec2_dot(a: number, b: number): number;
export function vec2_cross(a: number, b: number): number;
export function vec2_add(a: number, b: number): number;
export function vec2_sub(a: number, b: number): number;
export function vec2_mul(a: number, b: number): number;
export function vec2_div(a: number, b: number): number;
export function __wbg_circle_free(a: number): void;
export function circle_new(a: number, b: number): number;
export function circle_center(a: number): number;
export function circle_area(a: number): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
